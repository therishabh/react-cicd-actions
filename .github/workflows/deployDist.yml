name : Deploy Dist
on: 
    push:
        branches:
            - main
            - master
            - feature/**
        paths-ignore:
            - .github/workflows/*
            - README.md
    workflow_dispatch:

env:
    NODE_VERSION: 20

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            #   run : |
            #      echo "Getting Code..."
            #      echo "${{toJson(github)}}"
            #      git clone "https://github.com/${{github.repository}}.git"
            #      echo "Code retrieved successfully.";

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Print Node.js and npm version
              run: |
                node --version
                npm --version

            - name : Cache npm
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                    ${{ runner.os }}-node-${{ env.NODE_VERSION }}-npm-

            - name : Install dependencies
              run: npm ci --prefer-offline --no-audit --progress=false
            
            - name : Run Tests
              run: npm run test

    build:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
        
            - name : Cache npm
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                    ${{ runner.os }}-node-${{ env.NODE_VERSION }}-npm-

            - name : Install dependencies
              run: npm ci --prefer-offline --no-audit --progress=false
            
            - name : Build project
              run: npm run build

            - name : upload dist artifact
              id: deployment
              uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
              with:
                path: build_outputs_folder/

    deploy:
        runs-on: ubuntu-latest
        needs: build
        # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
        permissions:
          pages: write      # to deploy to Pages
          id-token: write   # to verify the deployment originates from an appropriate source

        # Deploy to the github-pages environment
        environment:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}

        # Specify runner + deployment step
        steps:
          - name: Deploy to GitHub Pages
            id: deployment
            uses: actions/deploy-pages@v4
              
              